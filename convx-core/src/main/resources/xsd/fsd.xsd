<?xml version="1.0" encoding="UTF-8"?>
<!--

        Copyright (C) 2012 Johan Grufman

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fsd="http://www.convx.org/schemas/1.0/fsd"
           targetNamespace="http://www.convx.org/schemas/1.0/fsd" elementFormDefault="qualified">

    <xs:element name="schema">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="root" type="fsd:Sequence"/>
                <xs:element ref="fsd:elementBase" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="elementBase" abstract="true" type="fsd:ElementBase"/>
    <xs:complexType name="ElementBase">
        <xs:sequence>

        </xs:sequence>
        <xs:attribute name="name"/>
        <xs:attribute name="id"/>
        <xs:attribute name="ref"/>
        <xs:attribute name="minOccurs" type="xs:int"/>
        <xs:attribute name="maxOccurs" type="fsd:allNNI"/>
    </xs:complexType>

    <xs:element name="sequence" type="fsd:Sequence" substitutionGroup="fsd:elementBase"/>
    <xs:complexType name="Sequence">
        <xs:complexContent>
            <xs:extension base="fsd:ElementBase">
                <xs:sequence>
                    <xs:element ref="fsd:elementBase" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="separatedBy"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="line" type="fsd:Line" substitutionGroup="fsd:elementBase"/>
    <xs:complexType name="Line">
        <xs:complexContent>
            <xs:extension base="fsd:Sequence">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="field" type="fsd:Field" substitutionGroup="fsd:elementBase"/>
    <xs:complexType name="Field">
        <xs:complexContent>
            <xs:extension base="fsd:ElementBase">
                <xs:sequence>
                    <xs:element ref="fsd:format" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="length" type="xs:int"/>
                <xs:attribute name="characterSet"/>
                <xs:attribute name="quoteCharacter"/>
                <xs:attribute name="defaultOutput"/>
                <xs:attribute name="trim" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="format" type="fsd:Format"/>
    <xs:complexType name="Format"/>

    <xs:element name="date" type="fsd:DateFormat" substitutionGroup="fsd:format"/>
    <xs:complexType name="DateFormat">
        <xs:complexContent>
            <xs:extension base="fsd:Format">
                <xs:attribute name="format"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="constant" type="fsd:Constant" substitutionGroup="fsd:elementBase"/>
    <xs:complexType name="Constant">
        <xs:complexContent>
            <xs:extension base="fsd:ElementBase">
                <xs:attribute name="value"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="token" type="fsd:Token" substitutionGroup="fsd:elementBase"/>
    <xs:complexType name="Token">
        <xs:complexContent>
            <xs:extension base="fsd:ElementBase">
                <xs:attribute name="characterSet"/>
                <xs:attribute name="output"/>
                <xs:attribute name="minLength"/>
                <xs:attribute name="maxLength"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="allNNI">
        <xs:annotation>
            <xs:documentation>
                for maxOccurs
            </xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="xs:nonNegativeInteger">
            <xs:simpleType>
                <xs:restriction base="xs:NMTOKEN">
                    <xs:enumeration value="unbounded"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

</xs:schema>
